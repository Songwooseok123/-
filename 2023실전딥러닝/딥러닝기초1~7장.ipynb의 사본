{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyNhJkQe5wv3khcJkIW7l7ht"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","metadata":{"id":"AQjVb8tos1Wx"},"source":["#day2(numpy,tensorflow 기본기)\n","\n","- tf.Variable 변수 텐서(얘만 가변)\n","- tf.Constatnt 상수 텐서\n","- tf.Placeholder 2점대 버전에선 사용거의 안함\n","- tf.Sparse Tensor"]},{"cell_type":"code","metadata":{"id":"Dxw6kfBms3ev","executionInfo":{"status":"ok","timestamp":1697697084549,"user_tz":-540,"elapsed":2144,"user":{"displayName":"송우석","userId":"17544301414917834266"}}},"source":["import numpy as np\n","import tensorflow as tf"],"execution_count":2,"outputs":[]},{"cell_type":"code","source":["a = tf.constant([[1,2,3],[4,5,6]])\n","tf.reduce_min(a)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"N-VlGoveqyjy","executionInfo":{"status":"ok","timestamp":1694627511876,"user_tz":-540,"elapsed":4,"user":{"displayName":"송우석","userId":"17544301414917834266"}},"outputId":"e526f7c1-662d-4996-d596-2106e9586f95"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<tf.Tensor: shape=(), dtype=int32, numpy=1>"]},"metadata":{},"execution_count":2}]},{"cell_type":"code","source":["tf.reduce_min(a,axis = 1)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"yWPkD2Uuq8FF","executionInfo":{"status":"ok","timestamp":1694627524135,"user_tz":-540,"elapsed":6,"user":{"displayName":"송우석","userId":"17544301414917834266"}},"outputId":"b9aadc73-7195-4efc-c34c-3deb039307f6"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<tf.Tensor: shape=(2,), dtype=int32, numpy=array([1, 4], dtype=int32)>"]},"metadata":{},"execution_count":3}]},{"cell_type":"code","source":["a= tf.constant([[[11,2,3],[4,7,6]],[[10,22,3],[4,5,6]]])\n","tf.reduce_min(a)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Vb99aRpOrB8z","executionInfo":{"status":"ok","timestamp":1694627937792,"user_tz":-540,"elapsed":360,"user":{"displayName":"송우석","userId":"17544301414917834266"}},"outputId":"1a044106-cb04-487d-9e14-84fb2a69c602"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<tf.Tensor: shape=(), dtype=int32, numpy=2>"]},"metadata":{},"execution_count":20}]},{"cell_type":"code","source":["a"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"xpDOBouCr54Y","executionInfo":{"status":"ok","timestamp":1694627937793,"user_tz":-540,"elapsed":5,"user":{"displayName":"송우석","userId":"17544301414917834266"}},"outputId":"3cadaf4c-9803-422a-9107-843108c28ecc"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<tf.Tensor: shape=(2, 2, 3), dtype=int32, numpy=\n","array([[[11,  2,  3],\n","        [ 4,  7,  6]],\n","\n","       [[10, 22,  3],\n","        [ 4,  5,  6]]], dtype=int32)>"]},"metadata":{},"execution_count":21}]},{"cell_type":"code","source":["tf.reduce_min(a,axis= 0)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"VRKoiPYnrzbv","executionInfo":{"status":"ok","timestamp":1694627938123,"user_tz":-540,"elapsed":11,"user":{"displayName":"송우석","userId":"17544301414917834266"}},"outputId":"27a81b0c-b096-416b-f538-ef0cd5b96b22"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<tf.Tensor: shape=(2, 3), dtype=int32, numpy=\n","array([[10,  2,  3],\n","       [ 4,  5,  6]], dtype=int32)>"]},"metadata":{},"execution_count":22}]},{"cell_type":"code","source":["tf.reduce_min(a,axis= 1)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"crf2TcZcrCDk","executionInfo":{"status":"ok","timestamp":1694627938124,"user_tz":-540,"elapsed":10,"user":{"displayName":"송우석","userId":"17544301414917834266"}},"outputId":"721611b3-a2b2-4284-feee-a388a86ea8e1"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<tf.Tensor: shape=(2, 3), dtype=int32, numpy=\n","array([[4, 2, 3],\n","       [4, 5, 3]], dtype=int32)>"]},"metadata":{},"execution_count":23}]},{"cell_type":"code","source":["a= tf.constant([[[1,2,3],[4,5,6]],[[1,2,3],[4,5,6]]])\n","print(a)\n","tf.reduce_min(a,axis = (1,2))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"51uHBl5Atu5D","executionInfo":{"status":"ok","timestamp":1694628300910,"user_tz":-540,"elapsed":4,"user":{"displayName":"송우석","userId":"17544301414917834266"}},"outputId":"c80784ed-f7bd-40b4-e644-f2e898235302"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["tf.Tensor(\n","[[[1 2 3]\n","  [4 5 6]]\n","\n"," [[1 2 3]\n","  [4 5 6]]], shape=(2, 2, 3), dtype=int32)\n"]},{"output_type":"execute_result","data":{"text/plain":["<tf.Tensor: shape=(2,), dtype=int32, numpy=array([1, 1], dtype=int32)>"]},"metadata":{},"execution_count":26}]},{"cell_type":"code","source":["tf.reduce_min(a,axis= (0,1))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"yZgIEJUOr1iR","executionInfo":{"status":"ok","timestamp":1694627939880,"user_tz":-540,"elapsed":414,"user":{"displayName":"송우석","userId":"17544301414917834266"}},"outputId":"855dccd1-64ac-46e4-fd01-8e50fe08521d"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<tf.Tensor: shape=(3,), dtype=int32, numpy=array([4, 2, 3], dtype=int32)>"]},"metadata":{},"execution_count":24}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"bsfNDgwJtYLP","executionInfo":{"status":"ok","timestamp":1617101023331,"user_tz":-540,"elapsed":1032,"user":{"displayName":"송우석","photoUrl":"","userId":"17544301414917834266"}},"outputId":"de1e7b29-fe75-4a07-c4bc-f1fa71e42cde"},"source":["a=tf.constant([[1,2],[3,4]])\n","b=tf.add(a,1)\n","b"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<tf.Tensor: shape=(2, 2), dtype=int32, numpy=\n","array([[2, 3],\n","       [4, 5]], dtype=int32)>"]},"metadata":{"tags":[]},"execution_count":5}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"blVQwWUcurPF","executionInfo":{"status":"ok","timestamp":1617101024483,"user_tz":-540,"elapsed":600,"user":{"displayName":"송우석","photoUrl":"","userId":"17544301414917834266"}},"outputId":"653c9071-d1bc-409d-dfd0-a754939c0f50"},"source":["a.numpy()\n","b.numpy()\n","b"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<tf.Tensor: shape=(2, 2), dtype=int32, numpy=\n","array([[2, 3],\n","       [4, 5]], dtype=int32)>"]},"metadata":{"tags":[]},"execution_count":6}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"IB5V1IM1usHb","executionInfo":{"status":"ok","timestamp":1617101096277,"user_tz":-540,"elapsed":879,"user":{"displayName":"송우석","photoUrl":"","userId":"17544301414917834266"}},"outputId":"b3457d81-c20f-4737-9f8b-fa25aa76e88d"},"source":["tf.multiply(a,b) # 같은 자리에 있는 원소끼리 곱하는거."],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<tf.Tensor: shape=(2, 2), dtype=int32, numpy=\n","array([[ 2,  6],\n","       [12, 20]], dtype=int32)>"]},"metadata":{"tags":[]},"execution_count":9}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"NkVnwAs6u61O","executionInfo":{"status":"ok","timestamp":1617101299775,"user_tz":-540,"elapsed":654,"user":{"displayName":"송우석","photoUrl":"","userId":"17544301414917834266"}},"outputId":"ce6d8dd2-68eb-46c2-b20f-da7297de2cfc"},"source":["print(tf.rank(b))\n","print(b.shape)"],"execution_count":null,"outputs":[{"output_type":"stream","text":["tf.Tensor(2, shape=(), dtype=int32)\n","(2, 2)\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"4nSp03OCvufm","executionInfo":{"status":"ok","timestamp":1617101385431,"user_tz":-540,"elapsed":927,"user":{"displayName":"송우석","photoUrl":"","userId":"17544301414917834266"}},"outputId":"cc96939c-ae41-40a6-ded9-806a708a0b73"},"source":["a=tf.constant([[1,2],[3,4]])\n","a[1,1]"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<tf.Tensor: shape=(), dtype=int32, numpy=4>"]},"metadata":{"tags":[]},"execution_count":13}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Gs-BFQDnwJ_d","executionInfo":{"status":"ok","timestamp":1617101611640,"user_tz":-540,"elapsed":634,"user":{"displayName":"송우석","photoUrl":"","userId":"17544301414917834266"}},"outputId":"bfc0561c-c255-43e6-ba8f-cbb978c4ed1f"},"source":["a=np.array([[1,2,3,4,5],[8,9,10,11,12]])\n","a[1,3]\n"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["11"]},"metadata":{"tags":[]},"execution_count":25}]},{"cell_type":"code","source":["[[1 2\n","  3 4]]\n","\n","[[5 6\n","  7 8]]"],"metadata":{"id":"wcsHEhxlorby"},"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"cKCzql6xwWA5","executionInfo":{"status":"ok","timestamp":1617101614524,"user_tz":-540,"elapsed":488,"user":{"displayName":"송우석","photoUrl":"","userId":"17544301414917834266"}},"outputId":"689cfedd-d3f6-4679-9ec9-137f930238f8"},"source":["a[0,:]"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([1, 2, 3, 4, 5])"]},"metadata":{"tags":[]},"execution_count":26}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"OPD7JRZ8wZQ2","executionInfo":{"status":"ok","timestamp":1617101615616,"user_tz":-540,"elapsed":450,"user":{"displayName":"송우석","photoUrl":"","userId":"17544301414917834266"}},"outputId":"5939c25d-d896-4a9d-ff28-478678de5be4"},"source":["a[:,1]"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([2, 9])"]},"metadata":{"tags":[]},"execution_count":27}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"6tO-HPyLwdUE","executionInfo":{"status":"ok","timestamp":1617101639655,"user_tz":-540,"elapsed":633,"user":{"displayName":"송우석","photoUrl":"","userId":"17544301414917834266"}},"outputId":"9a30c189-2685-42ec-a48c-98505fadc1f9"},"source":["a[0,1:-1:2]"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([2, 4])"]},"metadata":{"tags":[]},"execution_count":28}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"l8JVejrjxM0y","executionInfo":{"status":"ok","timestamp":1617101723808,"user_tz":-540,"elapsed":669,"user":{"displayName":"송우석","photoUrl":"","userId":"17544301414917834266"}},"outputId":"5214ac1d-ba10-4c06-b7cc-9fa250aa8d98"},"source":["b=np.array([[[1,2],[3,4]],[[5,6],[7,8]]])\n","b[0,1,1]"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["4"]},"metadata":{"tags":[]},"execution_count":29}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"qB-KUnZTxhVC","executionInfo":{"status":"ok","timestamp":1617101734465,"user_tz":-540,"elapsed":813,"user":{"displayName":"송우석","photoUrl":"","userId":"17544301414917834266"}},"outputId":"c88b7624-1656-4c15-c73b-89c25f7c98e5"},"source":["b[0,:,:]"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[1, 2],\n","       [3, 4]])"]},"metadata":{"tags":[]},"execution_count":30}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"f6zD40t4xj7p","executionInfo":{"status":"ok","timestamp":1617101746986,"user_tz":-540,"elapsed":617,"user":{"displayName":"송우석","photoUrl":"","userId":"17544301414917834266"}},"outputId":"4938002d-dade-49a5-dddd-98192ddc434f"},"source":["b[:,0,:]"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[1, 2],\n","       [5, 6]])"]},"metadata":{"tags":[]},"execution_count":31}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"QIY4SSODxnCS","executionInfo":{"status":"ok","timestamp":1617101771489,"user_tz":-540,"elapsed":755,"user":{"displayName":"송우석","photoUrl":"","userId":"17544301414917834266"}},"outputId":"8b010f1b-98a7-4722-ac25-bca0d85a362f"},"source":["b[:,:,0]"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[1, 3],\n","       [5, 7]])"]},"metadata":{"tags":[]},"execution_count":32}]},{"cell_type":"code","metadata":{"id":"3wuRiqNrxs_G"},"source":["before= np.array(range(60)).reshape(3,4,5)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"1nJv-QV2yoEF","executionInfo":{"status":"ok","timestamp":1617102023169,"user_tz":-540,"elapsed":1528,"user":{"displayName":"송우석","photoUrl":"","userId":"17544301414917834266"}},"outputId":"ba7c787b-12f6-4c9b-fdfa-cd02d5861bb6"},"source":["before"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[[ 0,  1,  2,  3,  4],\n","        [ 5,  6,  7,  8,  9],\n","        [10, 11, 12, 13, 14],\n","        [15, 16, 17, 18, 19]],\n","\n","       [[20, 21, 22, 23, 24],\n","        [25, 26, 27, 28, 29],\n","        [30, 31, 32, 33, 34],\n","        [35, 36, 37, 38, 39]],\n","\n","       [[40, 41, 42, 43, 44],\n","        [45, 46, 47, 48, 49],\n","        [50, 51, 52, 53, 54],\n","        [55, 56, 57, 58, 59]]])"]},"metadata":{"tags":[]},"execution_count":34}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"SoTV1Y-pypDC","executionInfo":{"status":"ok","timestamp":1617102067248,"user_tz":-540,"elapsed":637,"user":{"displayName":"송우석","photoUrl":"","userId":"17544301414917834266"}},"outputId":"c1443f11-27fe-46c9-a8f1-4433a2a328d1"},"source":["after=np.reshape(before,(2,3,-1)) #여기서 -1은 남은거 자동계산 하라는뜻 즉, 10이랑 같은말\n","after"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[[ 0,  1,  2,  3,  4,  5,  6,  7,  8,  9],\n","        [10, 11, 12, 13, 14, 15, 16, 17, 18, 19],\n","        [20, 21, 22, 23, 24, 25, 26, 27, 28, 29]],\n","\n","       [[30, 31, 32, 33, 34, 35, 36, 37, 38, 39],\n","        [40, 41, 42, 43, 44, 45, 46, 47, 48, 49],\n","        [50, 51, 52, 53, 54, 55, 56, 57, 58, 59]]])"]},"metadata":{"tags":[]},"execution_count":35}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Ex9pPUIcy1OT","executionInfo":{"status":"ok","timestamp":1617102275349,"user_tz":-540,"elapsed":655,"user":{"displayName":"송우석","photoUrl":"","userId":"17544301414917834266"}},"outputId":"ae477e63-3e1d-4c51-e1d7-051e7a0660d2"},"source":["h1=tf.ones((2,4))\n","h2=tf.zeros((2,2))\n","tf.concat([h1,h2],axis=1)"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<tf.Tensor: shape=(2, 6), dtype=float32, numpy=\n","array([[1., 1., 1., 1., 0., 0.],\n","       [1., 1., 1., 1., 0., 0.]], dtype=float32)>"]},"metadata":{"tags":[]},"execution_count":36}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Rk0SFEYlzoBj","executionInfo":{"status":"ok","timestamp":1617102327006,"user_tz":-540,"elapsed":1100,"user":{"displayName":"송우석","photoUrl":"","userId":"17544301414917834266"}},"outputId":"dd1b76e3-3d69-42d4-faea-2cfc7800406e"},"source":["h1=tf.ones((2,4))\n","h2=tf.zeros((2,4))\n","tf.stack([h1,h2],axis=1)"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<tf.Tensor: shape=(2, 2, 4), dtype=float32, numpy=\n","array([[[1., 1., 1., 1.],\n","        [0., 0., 0., 0.]],\n","\n","       [[1., 1., 1., 1.],\n","        [0., 0., 0., 0.]]], dtype=float32)>"]},"metadata":{"tags":[]},"execution_count":40}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"GHFOZjogzptA","executionInfo":{"status":"ok","timestamp":1617102371027,"user_tz":-540,"elapsed":877,"user":{"displayName":"송우석","photoUrl":"","userId":"17544301414917834266"}},"outputId":"39e14d5b-8943-425e-b310-072e84adb45d"},"source":["h1=tf.ones((2,4))\n","h2=tf.zeros((2,4))\n","tf.stack([h1,h2],axis=0)"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<tf.Tensor: shape=(2, 2, 4), dtype=float32, numpy=\n","array([[[1., 1., 1., 1.],\n","        [1., 1., 1., 1.]],\n","\n","       [[0., 0., 0., 0.],\n","        [0., 0., 0., 0.]]], dtype=float32)>"]},"metadata":{"tags":[]},"execution_count":43}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"jkyxSQWxz25k","executionInfo":{"status":"ok","timestamp":1617102917781,"user_tz":-540,"elapsed":660,"user":{"displayName":"송우석","photoUrl":"","userId":"17544301414917834266"}},"outputId":"e8a8b1d3-cf81-4889-c799-9bcd6358305e"},"source":[" '''\n"," np.matmul: 걍 행렬의 곱\n","첫번째 축 모양 맞추고 안에는 행렬의 곱\n","tf.matmul이랑 똑같음.\n","\n"," np.dot : 벡터는 내적하는거, 행렬은 걍 matmul이랑 같음.\n"," a의 마지막 축이랑 b의 마지막에서 두번쨰 축이랑 내적하는 결과를냄\n"," '''\n","a=np.ones((2,3))\n","b=np.full((3,2),3)\n","np.dot(a,b)"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[9., 9.],\n","       [9., 9.]])"]},"metadata":{"tags":[]},"execution_count":45}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"5II9NFM32Aj5","executionInfo":{"status":"ok","timestamp":1617104406003,"user_tz":-540,"elapsed":1306,"user":{"displayName":"송우석","photoUrl":"","userId":"17544301414917834266"}},"outputId":"76dbf5d6-0823-4ddd-b477-68b58d3ee4c9"},"source":["#tf.tensordot: 어떤 축으로 내적을 수행해 줄것인가 알려줘야함\n","\n","a=tf.constant([[[1,2,3],[4,5,6]],[[0.1,0.2,0.3],[0.4,0.5,0.6]]])\n","a"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<tf.Tensor: shape=(2, 2, 3), dtype=float32, numpy=\n","array([[[1. , 2. , 3. ],\n","        [4. , 5. , 6. ]],\n","\n","       [[0.1, 0.2, 0.3],\n","        [0.4, 0.5, 0.6]]], dtype=float32)>"]},"metadata":{"tags":[]},"execution_count":46}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"DeXRT4Cp7v6f","executionInfo":{"status":"ok","timestamp":1617104476338,"user_tz":-540,"elapsed":673,"user":{"displayName":"송우석","photoUrl":"","userId":"17544301414917834266"}},"outputId":"ebaa5d47-1f10-42dd-ddd5-0ab46dc42f01"},"source":["b=tf.constant([[[10,20],[30,40],[50,60]],[[1,2],[3,4],[5,6]]],dtype=tf.float32)\n","b"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<tf.Tensor: shape=(2, 3, 2), dtype=float32, numpy=\n","array([[[10., 20.],\n","        [30., 40.],\n","        [50., 60.]],\n","\n","       [[ 1.,  2.],\n","        [ 3.,  4.],\n","        [ 5.,  6.]]], dtype=float32)>"]},"metadata":{"tags":[]},"execution_count":47}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"S9-8CAgy8BPQ","executionInfo":{"status":"ok","timestamp":1617104505074,"user_tz":-540,"elapsed":613,"user":{"displayName":"송우석","photoUrl":"","userId":"17544301414917834266"}},"outputId":"6b1ff156-3258-4872-f0de-d99e5f30c635"},"source":["tf.tensordot(a,b,axes=[[2],[1]]) #a의 3번쨰축, b의 2번째축"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<tf.Tensor: shape=(2, 2, 2, 2), dtype=float32, numpy=\n","array([[[[220.       , 280.       ],\n","         [ 22.       ,  28.       ]],\n","\n","        [[490.       , 640.       ],\n","         [ 49.       ,  64.       ]]],\n","\n","\n","       [[[ 22.       ,  28.       ],\n","         [  2.2      ,   2.8000002]],\n","\n","        [[ 49.       ,  64.       ],\n","         [  4.9      ,   6.4      ]]]], dtype=float32)>"]},"metadata":{"tags":[]},"execution_count":48}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"LjDge-cv4_e3","executionInfo":{"status":"ok","timestamp":1677072534810,"user_tz":-540,"elapsed":7,"user":{"displayName":"송우석","userId":"17544301414917834266"}},"outputId":"4c6b17c9-5cca-4dc9-9b3a-7c087f5c8955"},"source":["#vectorization 예제\n","import numpy as np\n","#numpy에서 시간적으로 vetorization의 이점은 없음\n","def myfunc(a,b):\n","  return np.dot(a,b)\n","\n","vfunc = np.vectorize(myfunc)\n","vfunc([[1,2],[2,3],[3,4]],[1,2])\n","\n","vfunc = np.vectorize(myfunc,signature='(n),(m)->()') #()는 인풋의 차원인듯\n","print(\"\")\n","vfunc([[1,2],[2,3],[3,4]],[1,1])"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["\n"]},{"output_type":"execute_result","data":{"text/plain":["array([3, 5, 7])"]},"metadata":{},"execution_count":1}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"3ALjOtW87mXH","executionInfo":{"status":"ok","timestamp":1677072874115,"user_tz":-540,"elapsed":1732,"user":{"displayName":"송우석","userId":"17544301414917834266"}},"outputId":"7108328d-ef23-4694-d370-fe640ff98b3f"},"source":["# tensolflow에서 vectorization의 이점을 보여주는 예제\n","import time\n","def my_matmul(arg):\n","  a,b = arg\n","  return tf.matmul(a,b)\n","\n","batch_size=1000\n","a=tf.ones((batch_size,32,32))\n","b=tf.ones((batch_size,32,32))\n","start = time.time()\n","c=tf.vectorized_map(my_matmul,(a,b))\n","print(\"Execution time: {}secs\".format(time.time()-start))\n","#for문 돌렸을때.\n","start=time.time()\n","c=list()\n","for x,y in zip(a,b):\n","  c.append(my_matmul([x,y]))\n","print(\"Execution time: {}secs\".format(time.time()-start))"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Execution time: 0.29557228088378906secs\n","Execution time: 0.626004695892334secs\n"]}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"3dGsTn3vKN96","executionInfo":{"status":"ok","timestamp":1617192109762,"user_tz":-540,"elapsed":1359,"user":{"displayName":"송우석","photoUrl":"","userId":"17544301414917834266"}},"outputId":"fb914fa2-1e7d-4b88-b399-c492520fd4f0"},"source":["#extend_dims\n","x=np.array([1,2])\n","x.shape"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(2,)"]},"metadata":{"tags":[]},"execution_count":51}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"8KMrfaG2KUnW","executionInfo":{"status":"ok","timestamp":1617192154903,"user_tz":-540,"elapsed":1129,"user":{"displayName":"송우석","photoUrl":"","userId":"17544301414917834266"}},"outputId":"c2288cfa-be87-449d-dc8f-224983e94db1"},"source":["y=np.expand_dims(x,axis=0)\n","print(y)\n","print(y.shape)"],"execution_count":null,"outputs":[{"output_type":"stream","text":["[[1 2]]\n","(1, 2)\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"qh1879ZkKjpV","executionInfo":{"status":"ok","timestamp":1617192201792,"user_tz":-540,"elapsed":1421,"user":{"displayName":"송우석","photoUrl":"","userId":"17544301414917834266"}},"outputId":"ca9bbb1a-7111-4806-f9da-3fcdfd574314"},"source":["y=np.expand_dims(x,axis=1)\n","print(y)\n","print(y.shape)"],"execution_count":null,"outputs":[{"output_type":"stream","text":["[[1]\n"," [2]]\n","(2, 1)\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"UGXr1GGJLNpD","executionInfo":{"status":"ok","timestamp":1617192429710,"user_tz":-540,"elapsed":1184,"user":{"displayName":"송우석","photoUrl":"","userId":"17544301414917834266"}},"outputId":"a41f1d14-b5bb-44b5-b300-e1d0e998ca45"},"source":["x=np.array([[1,2],[3,4]])\n","x.shape"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(2, 2)"]},"metadata":{"tags":[]},"execution_count":56}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"RZprTHvaLXhL","executionInfo":{"status":"ok","timestamp":1617192429713,"user_tz":-540,"elapsed":883,"user":{"displayName":"송우석","photoUrl":"","userId":"17544301414917834266"}},"outputId":"bd4b1e9a-6619-4202-c00d-65d330da9364"},"source":["y=np.expand_dims(x,axis=-1)\n","print(y)\n","print(y.shape)"],"execution_count":null,"outputs":[{"output_type":"stream","text":["[[[1]\n","  [2]]\n","\n"," [[3]\n","  [4]]]\n","(2, 2, 1)\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"23H7ZYt3LeUd","executionInfo":{"status":"ok","timestamp":1617192429716,"user_tz":-540,"elapsed":670,"user":{"displayName":"송우석","photoUrl":"","userId":"17544301414917834266"}},"outputId":"5ecf65d8-ee15-4c5f-d861-9c41c444eb03"},"source":["y=np.expand_dims(x,axis=1)\n","print(y)\n","print(y.shape)"],"execution_count":null,"outputs":[{"output_type":"stream","text":["[[[1 2]]\n","\n"," [[3 4]]]\n","(2, 1, 2)\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"-yKluDIXgMRQ","executionInfo":{"status":"ok","timestamp":1617197872932,"user_tz":-540,"elapsed":685,"user":{"displayName":"송우석","photoUrl":"","userId":"17544301414917834266"}},"outputId":"2c6fabd3-b698-440c-ac0f-92d6ebb950c9"},"source":["#tensor_slices\n","dataset = tf.data.Dataset.from_tensor_slices([1,2,3])\n","dataset"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<TensorSliceDataset shapes: (), types: tf.int32>"]},"metadata":{"tags":[]},"execution_count":12}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"3w9Va1sHgUJF","executionInfo":{"status":"ok","timestamp":1617197888853,"user_tz":-540,"elapsed":1176,"user":{"displayName":"송우석","photoUrl":"","userId":"17544301414917834266"}},"outputId":"350f08cb-5e9b-4d06-fcd8-5d9216bcc16a"},"source":["for elem in dataset:\n","  print(elem)"],"execution_count":null,"outputs":[{"output_type":"stream","text":["tf.Tensor(1, shape=(), dtype=int32)\n","tf.Tensor(2, shape=(), dtype=int32)\n","tf.Tensor(3, shape=(), dtype=int32)\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"MJgKe7VFgzor","executionInfo":{"status":"ok","timestamp":1617198048031,"user_tz":-540,"elapsed":1301,"user":{"displayName":"송우석","photoUrl":"","userId":"17544301414917834266"}},"outputId":"13ae7148-8302-4bcc-ee55-4313758f5692"},"source":["dataset = tf.data.Dataset.from_tensor_slices([[1,2,3]])\n","dataset"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<TensorSliceDataset shapes: (3,), types: tf.int32>"]},"metadata":{"tags":[]},"execution_count":14}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"B_pklIufg_BI","executionInfo":{"status":"ok","timestamp":1617198095216,"user_tz":-540,"elapsed":1353,"user":{"displayName":"송우석","photoUrl":"","userId":"17544301414917834266"}},"outputId":"6eb8fa43-c536-4bb9-cf63-22246aa37123"},"source":["'''\n","for elem in dataset:\n","  print(elem)\n","이거 간단하게 밑에.\n","'''\n","list(dataset.as_numpy_iterator())"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["[array([1, 2, 3], dtype=int32)]"]},"metadata":{"tags":[]},"execution_count":15}]},{"cell_type":"markdown","metadata":{"id":"3QPSet_788DY"},"source":["#day3(binary logistic regression with numpy)"]},{"cell_type":"markdown","metadata":{"id":"WTBYlGu-P1OI"},"source":["##Coding binary logistic regression with numpy"]},{"cell_type":"code","source":["num_classes =10\n","num_features=784\n","\n","learning_rate = 0.0001\n","training_steps=100"],"metadata":{"id":"jrcgNON0Z2YH"},"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"SyaStPOJ8IZc","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1695263850180,"user_tz":-540,"elapsed":4306,"user":{"displayName":"송우석","userId":"17544301414917834266"}},"outputId":"d9edbaff-491b-4542-a832-43b219efa0e9"},"source":["from tensorflow.keras.datasets import mnist\n","(x_train,y_train),(x_test,y_test)= mnist.load_data()\n","print(x_train.shape)\n","print(y_train.shape)\n","print(x_test.shape)\n","print(y_test.shape)"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Downloading data from https://storage.googleapis.com/tensorflow/tf-keras-datasets/mnist.npz\n","11490434/11490434 [==============================] - 0s 0us/step\n","(60000, 28, 28)\n","(60000,)\n","(10000, 28, 28)\n","(10000,)\n"]}]},{"cell_type":"code","metadata":{"id":"mhCkKtf-XVYg","executionInfo":{"status":"ok","timestamp":1695267978684,"user_tz":-540,"elapsed":381,"user":{"displayName":"송우석","userId":"17544301414917834266"}},"colab":{"base_uri":"https://localhost:8080/"},"outputId":"433bcd41-ab42-4202-c563-c6e026dbd68d"},"source":["#binaray classification 이어서 0,1만 뽑자\n","x_train,y_train=map(list,zip(*[(x,y) for x,y in zip(x_train,y_train)if y==0 or y==1]))\n","x_test,y_test= map(list,zip(*[(x,y) for x,y in zip(x_test,y_test)if y==0 or y==1]))\n","\n","#convert to float32\n","x_train,x_test =np.array(x_train,np.float32),np.array(x_test,np.float32)\n","y_train,y_test= np.array(y_train,np.float32),np.array(y_test,np.float32)\n","\n","#flatten images(n,784) to 1-d vector of 784 features(n,28,28)\n","print(x_train.shape)\n","x_train,x_test = x_train.reshape([-1,num_features]),x_test.reshape([-1,num_features])\n","print(x_train.shape)\n","#normalize images value from (0,255) to (0,1)\n","x_train,x_test=x_train/255.,x_test/255."],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["(12665, 28, 28)\n","(12665, 784)\n"]}]},{"cell_type":"code","source":["print(x_test.shape)"],"metadata":{"id":"3TeYBnyHc5wn"},"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"_jezhuA7ZhyL"},"source":["def logistic_regression(x,b,b0):\n","  return 1./(1. +np.exp(-np.dot(b,x)-b0))# sigmoid를 통과해서 나온 0~1값들\n","\n","def accuracy(y_pred,y_true):\n","  '''\n","  y_pred에는 logistic_regression 통과해서 나온 0~1값,\n","  y_true에는 0또는 1값 들어감.\n","  y_pred가 0.5 보다 큰지 작은지.\n","  '''\n","  correct_prediction = np.equal(np.round(y_pred),y_true.astype(np.int64)) # 0또는 1 로 나옴결과.\n","  return np.mean(correct_prediction.astype(np.float32)) # 평균하면 정확도가 됨."],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"Ll8j2sq6Z22C"},"source":["#Perform gradient descent(b,b0 구하는거.)\n","b=np.random.uniform(-1,1,num_features)\n","b0=np.random.uniform(-1,1)\n","\n","for step in range(training_steps):\n","  db = np.zeros(num_features,dtype='float32')\n","  db0 = 0.\n","  for x,y in zip(x_train, y_train):\n","    a= logistic_regression(x,b,b0)\n","    db+=(y-a)*x #목적함수를 미분한담에 더해주면서 update\n","    db0+=y-a\n","  #gradient update 다했지.\n","  #그러면 이제 weight에다가 learning_rate곱해서 weight update\n","  b +=learning_rate*db\n","  b0 +=learning_rate*db0"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"EGOm710q9Bf-"},"source":["#예측을 할때 이걸 쓰던지 밑에 vectorization 한걸 쓸건지(vec~의 시간적이점이없음)\n","def logistic_regression_wo_vectorization(x_test,b,b0):\n","  pred=list()\n","  for t in x_test:\n","    pred.append(logistic_regression(t,b,b0))\n","  return pred\n","\n","pred=logistic_regression_wo_vectorization(x_test,b,b0)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"fPZxk49Pdjgu"},"source":["#구한 weight와 x_test 데이터로 예측.)\n","pred=np.vectorize(logistic_regression,\n","                  signature='(n),(n),()->()')(x_test,b,b0)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"f3XrTml0hn7z","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1695268047487,"user_tz":-540,"elapsed":13,"user":{"displayName":"송우석","userId":"17544301414917834266"}},"outputId":"227b1607-d898-4ecd-8a05-b0bcd5dd93b0"},"source":["#예측값을 평가\n","print(\"Test accuracy:%f\" % accuracy(pred,y_test))"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Test accuracy:0.997636\n"]}]},{"cell_type":"markdown","metadata":{"id":"Clik0T2R-5Jl"},"source":["#day4-2(logistic regression with multiclass)"]},{"cell_type":"code","metadata":{"id":"QyOystJdUeSp"},"source":["import numpy as np\n","import tensorflow as tf"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"0kgXj0eJB321"},"source":["num_classes =10\n","num_features=784\n","learning_rate = 0.0001\n","training_steps=10\n","batch_size=256\n","display_step =50\n","\n","from tensorflow.keras.datasets import mnist\n","(x_train,y_train),(x_test,y_test)= mnist.load_data()\n","\n","#convert to float32\n","x_train,x_test =np.array(x_train,np.float32),np.array(x_test,np.float32)\n","#flatten images(n,784) to 1-d vector of 784 features(n,28,28)\n","x_train,x_test = x_train.reshape([-1,num_features]),x_test.reshape([-1,num_features])\n","#normalize images value from (0,255) to (0,1)\n","x_train,x_test=x_train/255.,x_test/255."],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"v1gZvV6lM09Z"},"source":["def logistic_regression(x,b,b0):\n","  return 1./(1. +np.exp(-np.dot(b,x)-b0))# sigmoid를 통과해서 나온 0~1값들\n","\n","def accuracy(y_pred,y_true):\n","  #y_pred에는 logistic_regression 통과해서 나온 0~1값,\n","  correct_prediction = np.equal(np.argmax(y_pred,axis=1),y_true.astype(np.int64)) # 0또는 1 로 나옴결과.\n","  return np.mean(correct_prediction.astype(np.float32)) # 평균하면 정확도가 됨."],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"CXz3ammqET_i","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1677075933482,"user_tz":-540,"elapsed":325,"user":{"displayName":"송우석","userId":"17544301414917834266"}},"outputId":"cfa07551-a873-44ac-c8ee-55ece2b4472d"},"source":["#Perform gradient descent\n","b=np.random.uniform(-1,1,num_features*num_classes).reshape((num_classes,num_features))\n","b0=np.random.uniform(-1,1,num_classes)\n","#an epoch\n","for step in range(training_steps):\n","    db = np.zeros((num_classes,num_features),dtype='float32')\n","    db0 = np.zeros(num_classes,dtype='float32')\n","    #full batch algorithm\n","    for x,y in zip(x_train, y_train):\n","        yy = tf.one_hot(y,depth=num_classes).numpy()\n","        a= logistic_regression(x,b,b0)\n","        db += np.matmul(np.expand_dims(yy-a,axis=-1),np.expand_dims(x,axis=0))\n","\n","        #(10,1)과 (1,784)의 matmul\n","        db0 += yy-a\n","    #gradient update 다했지.\n","    #그러면 이제 weight에다가 learning_rate곱해서 weight update\n","    b +=learning_rate*db\n","    b0 +=learning_rate*db0"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["(10, 1)\n","(1, 784)\n","(10, 1)\n","(1, 784)\n","(10, 1)\n","(1, 784)\n","(10, 1)\n","(1, 784)\n","(10, 1)\n","(1, 784)\n","(10, 1)\n","(1, 784)\n","(10, 1)\n","(1, 784)\n","(10, 1)\n","(1, 784)\n","(10, 1)\n","(1, 784)\n","(10, 1)\n","(1, 784)\n"]}]},{"cell_type":"code","metadata":{"id":"hFqnLjCANFyz","executionInfo":{"status":"ok","timestamp":1677073837376,"user_tz":-540,"elapsed":621,"user":{"displayName":"송우석","userId":"17544301414917834266"}},"colab":{"base_uri":"https://localhost:8080/"},"outputId":"d40afcf1-e996-4d11-a114-f5726f4e3c99"},"source":["pred=np.vectorize(logistic_regression,signature='(n),(m,n),(m)->(m)')(x_test,b,b0)\n","\n","print(\"test accuracy: %f\"%accuracy(pred,y_test))"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["test accuracy: 0.804300\n"]}]},{"cell_type":"code","source":["num_classes =10\n","num_features=784\n","learning_rate = 0.0001\n","training_steps=100\n","\n","from tensorflow.keras.datasets import mnist\n","(x_train,y_train),(x_test,y_test)= mnist.load_data()\n","\n","x_train,y_train=map(list,zip(*[(x,y) for x,y in zip(x_train,y_train)if y==0 or y==1]))\n","x_test,y_test= map(list,zip(*[(x,y) for x,y in zip(x_test,y_test)if y==0 or y==1]))\n","\n","x_train,x_test =np.array(x_train,np.float32),np.array(x_test,np.float32)\n","y_train,y_test= np.array(y_train,np.float32),np.array(y_test,np.float32)\n","\n","x_train,x_test = x_train.reshape([-1,num_features]),x_test.reshape([-1,num_features])\n","\n","x_train,x_test=x_train/255.,x_test/255.\n","\n","def logistic_regression(x,b,b0):\n","    return 1./(1. +np.exp(-np.dot(b,x)-b0))\n","\n","def accuracy(y_pred,y_true):\n","\n","    correct_prediction = np.equal(np.round(y_pred),y_true.astype(np.int64))\n","    return np.mean(correct_prediction.astype(np.float32))\n","\n","b=np.random.uniform(-1,1,num_features)\n","b0=np.random.uniform(-1,1)\n","\n","for step in range(training_steps):\n","    db = np.zeros(num_features,dtype='float32')\n","    db0 = 0.\n","    for x,y in zip(x_train, y_train):\n","      a= logistic_regression(x,b,b0)\n","      db+=(y-a)*x\n","      db0+=y-a\n","    b +=learning_rate*db\n","    b0 +=learning_rate*db0\n","\n","pred=np.vectorize(logistic_regression,\n","                  signature='(n),(n),()->()')(x_test,b,b0)\n","\n","print(\"Test accuracy:%f\" % accuracy(pred,y_test))\n"],"metadata":{"id":"5fFYhTzCuNds"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"TpdmtvmJZSep"},"source":["#day5-2까지 mini-batch sgd\n","\n","full batch는 4장에서했고,\n","\n","mini -batch 로 랜덤으로 뽑아서\n","\n","학습시키는거."]},{"cell_type":"code","metadata":{"id":"RPX9gMrAahtv"},"source":["import numpy as np\n","import tensorflow as tf"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"NtYII6BAeXtK"},"source":["num_classes =10\n","num_features=784\n","learning_rate = 0.0001\n","training_steps=1000\n","\n","batch_size=256\n","display_step =50\n","\n","from tensorflow.keras.datasets import mnist\n","(x_train,y_train),(x_test,y_test)= mnist.load_data()\n","\n","#convert to float32\n","x_train,x_test =np.array(x_train,np.float32),np.array(x_test,np.float32)\n","#flatten images(n,784) to 1-d vector of 784 features(n,28,28)\n","x_train,x_test = x_train.reshape([-1,num_features]),x_test.reshape([-1,num_features])\n","#normalize images value from (0,255) to (0,1)\n","x_train,x_test=x_train/255.,x_test/255."],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"HrHmyzH9nSLJ"},"source":["def logistic_regression(x,b,b0):\n","  xx=np.expand_dims(x,axis=-1)\n","  return 1./(1.+np.exp(-np.dot(x,b)-b0))\n","def accuracy(y_pred,y_true):\n","  #y_pred에는 logistic_regression 통과해서 나온 0~1값,\n","  correct_prediction = np.equal(np.argmax(y_pred,axis=1),y_true.astype(np.int64)) # 0또는 1 로 나옴결과.\n","  return np.mean(correct_prediction.astype(np.float32)) # 평균하면 정확도가 됨."],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"TyLxhuzKZlaA","executionInfo":{"status":"ok","timestamp":1620871219523,"user_tz":-540,"elapsed":14678,"user":{"displayName":"송우석","photoUrl":"","userId":"17544301414917834266"}},"outputId":"7b7555f7-30a2-4cba-b3c6-dd8009716a9e"},"source":["#mini-batch sgd implementation\n","train_data = tf.data.Dataset.from_tensor_slices((x_train,y_train))\n","train_data = train_data.repeat().shuffle(5000).batch(batch_size).prefetch(1)\n","b=np.random.uniform(-1,1,num_features*num_classes).reshape((num_features,num_classes))\n","b0=np.random.uniform(-1,1,num_classes)\n","\n","for step,(batch_x,batch_y) in enumerate(train_data.take(training_steps),1):\n","    yy = tf.one_hot(batch_y,depth=num_classes).numpy()\n","    a= logistic_regression(batch_x,b,b0)\n","    db = np.sum(\n","        np.matmul(\n","            np.expand_dims(batch_x,axis=-1),np.expand_dims(yy-a,axis=-2)),\n","            axis=0)\n","    db0 = np.sum(yy-a,axis=0)\n","    b +=learning_rate* db\n","    b0 +=learning_rate* db0\n","\n","    if step % display_step==0:\n","      pred=logistic_regression(batch_x,b,b0)\n","      acc=accuracy(pred,batch_y.numpy())\n","      print(\"step:%i, accuracy: %f\"%(step,acc))"],"execution_count":null,"outputs":[{"output_type":"stream","text":["step:50, accuracy: 0.144531\n","step:100, accuracy: 0.253906\n","step:150, accuracy: 0.335938\n","step:200, accuracy: 0.421875\n","step:250, accuracy: 0.476562\n","step:300, accuracy: 0.519531\n","step:350, accuracy: 0.511719\n","step:400, accuracy: 0.582031\n","step:450, accuracy: 0.636719\n","step:500, accuracy: 0.636719\n","step:550, accuracy: 0.679688\n","step:600, accuracy: 0.703125\n","step:650, accuracy: 0.656250\n","step:700, accuracy: 0.726562\n","step:750, accuracy: 0.660156\n","step:800, accuracy: 0.691406\n","step:850, accuracy: 0.722656\n","step:900, accuracy: 0.722656\n","step:950, accuracy: 0.820312\n","step:1000, accuracy: 0.753906\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"sOD5FITSd7oX","executionInfo":{"status":"ok","timestamp":1620871224608,"user_tz":-540,"elapsed":628,"user":{"displayName":"송우석","photoUrl":"","userId":"17544301414917834266"}},"outputId":"2cfc14b7-d857-4d89-b2a1-014b73db37c8"},"source":["pred=logistic_regression(x_test,b,b0)\n","print(\"Test accuracy:%f\" % accuracy(pred,y_test))"],"execution_count":null,"outputs":[{"output_type":"stream","text":["Test accuracy:0.763100\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"exzZE5s5bZAA"},"source":["#Multivariate logistic regression"]},{"cell_type":"code","metadata":{"id":"lVpqkop1aid9"},"source":["#시그모이드 대신 softmax로 확률모델 만듬.\n","import numpy as np\n","import tensorflow as tf"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"bPkDZdG4fGiv"},"source":["num_classes =10\n","num_features=784\n","learning_rate = 0.0001\n","training_steps=1000\n","\n","batch_size=256\n","display_step =50\n","\n","from tensorflow.keras.datasets import mnist\n","(x_train,y_train),(x_test,y_test)= mnist.load_data()\n","\n","#convert to float32\n","x_train,x_test =np.array(x_train,np.float32),np.array(x_test,np.float32)\n","#flatten images(n,784) to 1-d vector of 784 features(n,28,28)\n","x_train,x_test = x_train.reshape([-1,num_features]),x_test.reshape([-1,num_features])\n","#normalize images value from (0,255) to (0,1)\n","x_train,x_test=x_train/255.,x_test/255."],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"M2RbD6ZAfGm4"},"source":["def regression(x,b,b0):#x에는 배치가 들어갈껀데 (256,784) b=(784,10), b0= (10,)\n","  xx=np.exp(np.dot(x,b)+b0) #(256,10)\n","  z=np.expand_dims(np.sum(xx,axis=1),axis=-1) #np.sum(xx,axis=1)=(256,) 이거를 expand dim해서 (256,1)로 만듬\n","  return xx/z #(256,10) / (256,1) element wise로 연산가능\n","\n","def accuracy(y_pred,y_true):\n","  #y_pred에는 logistic_regression 통과해서 나온 0~1값,\n","  correct_prediction = np.equal(np.argmax(y_pred,axis=1),y_true.astype(np.int64)) # 0또는 1 로 나옴결과.\n","  return np.mean(correct_prediction.astype(np.float32)) # 평균하면 정확도가 됨."],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"qA87HeiufGuT","executionInfo":{"status":"ok","timestamp":1620872306451,"user_tz":-540,"elapsed":15695,"user":{"displayName":"송우석","photoUrl":"","userId":"17544301414917834266"}},"outputId":"a843321c-420c-423e-b1e9-57e6a70ec66c"},"source":["import time\n","start = time.time()\n","#mini-batch sgd implementation\n","train_data = tf.data.Dataset.from_tensor_slices((x_train,y_train))\n","train_data = train_data.repeat().shuffle(5000).batch(batch_size).prefetch(1)\n","b=np.random.uniform(-1,1,num_features*num_classes).reshape((num_features,num_classes))\n","b0=np.random.uniform(-1,1,num_classes)\n","\n","for step,(batch_x,batch_y) in enumerate(train_data.take(training_steps),1):\n","    yy = tf.one_hot(batch_y,depth=num_classes).numpy()\n","    a= regression(batch_x,b,b0)\n","    db = np.sum(\n","        np.matmul(\n","            np.expand_dims(batch_x,axis=-1),np.expand_dims(yy-a,axis=-2)),\n","            axis=0)\n","    db0 = np.sum(yy-a,axis=0)\n","    b +=learning_rate* db\n","    b0 +=learning_rate* db0\n","\n","    if step % display_step==0:\n","      pred=logistic_regression(batch_x,b,b0)\n","      acc=accuracy(pred,batch_y.numpy())\n","      print(\"step:%i, accuracy: %f\"%(step,acc))\n","\n","print(\"실행시간:{}sec\".format(time.time()-start))"],"execution_count":null,"outputs":[{"output_type":"stream","text":["step:50, accuracy: 0.156250\n","step:100, accuracy: 0.332031\n","step:150, accuracy: 0.328125\n","step:200, accuracy: 0.449219\n","step:250, accuracy: 0.460938\n","step:300, accuracy: 0.535156\n","step:350, accuracy: 0.562500\n","step:400, accuracy: 0.617188\n","step:450, accuracy: 0.628906\n","step:500, accuracy: 0.613281\n","step:550, accuracy: 0.640625\n","step:600, accuracy: 0.695312\n","step:650, accuracy: 0.652344\n","step:700, accuracy: 0.703125\n","step:750, accuracy: 0.695312\n","step:800, accuracy: 0.695312\n","step:850, accuracy: 0.671875\n","step:900, accuracy: 0.710938\n","step:950, accuracy: 0.675781\n","step:1000, accuracy: 0.714844\n","실행시간:15.108638525009155sec\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"kvQyCFVbhGGH","executionInfo":{"status":"ok","timestamp":1620872319324,"user_tz":-540,"elapsed":596,"user":{"displayName":"송우석","photoUrl":"","userId":"17544301414917834266"}},"outputId":"57199c5e-0b07-4b60-9f3c-2d46ad170b87"},"source":["pred=regression(x_test,b,b0)\n","print(\"Test accuracy:%f\" % accuracy(pred,y_test))"],"execution_count":null,"outputs":[{"output_type":"stream","text":["Test accuracy:0.747900\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"TzRLkKcYys_v"},"source":["#6 Backpropagation"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"8UCUeWGmhM7f","executionInfo":{"status":"ok","timestamp":1620876989954,"user_tz":-540,"elapsed":646,"user":{"displayName":"송우석","photoUrl":"","userId":"17544301414917834266"}},"outputId":"d8beb2d0-6201-4291-d05e-d30c483e6abc"},"source":["#sigmoid with tensorflow\n","def my_sigmoid(x):\n","  return 1. / (1. +tf.math.exp(-x))\n","x=tf.constant([0.0,1.0,50.0,100.0])\n","my_sigmoid(x)"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<tf.Tensor: shape=(4,), dtype=float32, numpy=array([0.5      , 0.7310586, 1.       , 1.       ], dtype=float32)>"]},"metadata":{"tags":[]},"execution_count":32}]},{"cell_type":"code","metadata":{"id":"47MjmiDbzBLr"},"source":["def regression(x,b,b0):\n","  xx=tf.exp(tf.tensordot(x,b,[[1],[0]])+b0) #(256,10)\n","  #(tf.reduce_sum(xx,axis=1), ->(256,1) 벡터\n","  z=expand_dims(tf.reduce_sum(xx,axis=1),axis=-1)\n","  return xx/z"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"vjn2uorNDx84"},"source":["##tensorflow gradient tape로 자동미분, backpropagation 연산 연습"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":35},"id":"CFnkOgDJ3iQv","executionInfo":{"status":"ok","timestamp":1620880779439,"user_tz":-540,"elapsed":714,"user":{"displayName":"송우석","photoUrl":"","userId":"17544301414917834266"}},"outputId":"db5b5bb3-358e-43a8-bf08-918f8f080114"},"source":["#tensorflow로 backpropagation :\n","'''\n","1.variable\n","2.operators\n","3.output variables\n","'''"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"},"text/plain":["'\\n1.variable\\n2.operators\\n3.output variables\\n'"]},"metadata":{"tags":[]},"execution_count":34}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"10lyp5V6BeWj","executionInfo":{"status":"ok","timestamp":1620881121053,"user_tz":-540,"elapsed":676,"user":{"displayName":"송우석","photoUrl":"","userId":"17544301414917834266"}},"outputId":"eb75faf2-aee3-491c-e77a-f9a73b605746"},"source":["#1.variable 생성\n","x=tf.constant([1,3],dtype=tf.float32)\n","#2.operator\n","with tf.GradientTape() as tape:\n","  tape.watch(x)\n","  y=x*x\n","#gradient 계산 gradient 함수 사용. (output,변수): y를 x로 편미분한것을 겨산해달라. y=2x\n","g=tape.gradient(y,x)\n","print(g)"],"execution_count":null,"outputs":[{"output_type":"stream","text":["tf.Tensor([2. 6.], shape=(2,), dtype=float32)\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"yow5cuv4CPoB","executionInfo":{"status":"ok","timestamp":1620881303685,"user_tz":-540,"elapsed":740,"user":{"displayName":"송우석","photoUrl":"","userId":"17544301414917834266"}},"outputId":"2fcafb33-eeee-404b-bb06-32fa1aac75b8"},"source":["x=tf.constant(3.0)\n","z=x*x\n","with tf.GradientTape(persistent=True) as g:\n","  g.watch(z)\n","  y=z*z\n","\n","w=y*y\n","d=g.gradient(y,x)\n","print(d)\n","\n","d=g.gradient(y,z) #gradient tape 안에서 연산된에만 계산하게됨.\n","print(d)\n","\n","d=g.gradient(w,x)\n","print(d)\n","d=g.gradient(w,z)\n","print(d)\n","\n","d=g.gradient(w,y)\n","print(d)"],"execution_count":null,"outputs":[{"output_type":"stream","text":["None\n","tf.Tensor(18.0, shape=(), dtype=float32)\n","None\n","None\n","None\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"y0tsmuxcDeSR","executionInfo":{"status":"ok","timestamp":1620881523532,"user_tz":-540,"elapsed":698,"user":{"displayName":"송우석","photoUrl":"","userId":"17544301414917834266"}},"outputId":"2aeec86f-2a59-455f-ca87-b94f71533a00"},"source":["def square(x):\n","  return x*x\n","\n","x=tf.constant(3.0)\n","with tf.GradientTape() as g:\n","  g.watch(x)\n","  y=square(x)\n","dy_dx= g.gradient(y,x)\n","print(dy_dx)"],"execution_count":null,"outputs":[{"output_type":"stream","text":["tf.Tensor(6.0, shape=(), dtype=float32)\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"dm8yPbXwEGZo","executionInfo":{"status":"ok","timestamp":1620881652989,"user_tz":-540,"elapsed":672,"user":{"displayName":"송우석","photoUrl":"","userId":"17544301414917834266"}},"outputId":"58d6d825-a89a-412e-9cc4-917bef1247ca"},"source":["x=tf.constant(3.0)\n","with tf.GradientTape(persistent=True) as g: #persistent=True 를 해야 두번이상 gradienttape 호출 가능 (dy_dx= g.gradient(y,x) 계산가능)\n","  g.watch(x)\n","  y=x*x\n","  z=y*y\n","dz_dx=g.gradient(z,x)\n","print(dz_dx)\n","dy_dx= g.gradient(y,x)\n","print(dy_dx)"],"execution_count":null,"outputs":[{"output_type":"stream","text":["tf.Tensor(108.0, shape=(), dtype=float32)\n","tf.Tensor(6.0, shape=(), dtype=float32)\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"gkoudSbSEzos","executionInfo":{"status":"ok","timestamp":1620881840995,"user_tz":-540,"elapsed":637,"user":{"displayName":"송우석","photoUrl":"","userId":"17544301414917834266"}},"outputId":"d35ed917-5e82-4f56-a798-2ab748d4ad4a"},"source":["#이건 병신 , 밑에 꺼 쓸거임\n","x=tf.Variable(3.0)\n","with tf.GradientTape(persistent=True) as g:\n","  g.watch(x)\n","  y=x*x\n","for _ in range(2):\n","  dy_dx=g.gradient(y,x)\n","  print(dy_dx)\n","  x=x+1"],"execution_count":null,"outputs":[{"output_type":"stream","text":["tf.Tensor(6.0, shape=(), dtype=float32)\n","None\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"wbQ4-H4_Fhim","executionInfo":{"status":"ok","timestamp":1620881932898,"user_tz":-540,"elapsed":649,"user":{"displayName":"송우석","photoUrl":"","userId":"17544301414917834266"}},"outputId":"768e8890-1aa7-4b16-9fe8-3dd3804194aa"},"source":["x=tf.Variable(3.0)\n","for _ in range(2):\n","  with tf.GradientTape(persistent=True) as g:\n","    g.watch(x)\n","    y=x*x\n","  dy_dx=g.gradient(y,x)\n","  print(dy_dx)\n","  x=x+1"],"execution_count":null,"outputs":[{"output_type":"stream","text":["tf.Tensor(6.0, shape=(), dtype=float32)\n","tf.Tensor(8.0, shape=(), dtype=float32)\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"3XG_ps6JF3-g"},"source":["def myfunc(u,w,x):\n","  return tf.math.log(1+u*tf.exp(-w*x))"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"hTTVEmG3GwJm","executionInfo":{"status":"ok","timestamp":1620882361147,"user_tz":-540,"elapsed":786,"user":{"displayName":"송우석","photoUrl":"","userId":"17544301414917834266"}},"outputId":"3ab453e8-98b7-4b3c-ce51-1e3397316782"},"source":["x=tf.constant(1, dtype=tf.float32)\n","u=tf.Variable(1, dtype=tf.float32)\n","w=tf.Variable(1, dtype=tf.float32)\n","\n","with tf.GradientTape(persistent=True) as tape:\n","  tape.watch([u,w])\n","  y=myfunc(u,w,x)\n","\n","gradw=tape.gradient(y,w)\n","print(gradw)\n","\n","gradu=tape.gradient(y,u)\n","print(gradu)"],"execution_count":null,"outputs":[{"output_type":"stream","text":["tf.Tensor(-0.26894143, shape=(), dtype=float32)\n","tf.Tensor(0.26894143, shape=(), dtype=float32)\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"tRmfCHxdJhrI"},"source":["##binary logistic regression을 tensorflow로 구현, mini batch sgd도쓰고, gradient tape도 이용하고\n"]},{"cell_type":"code","metadata":{"id":"Po7tklNBHYkn"},"source":["num_classes =10\n","num_features=784\n","learning_rate = 0.0001\n","training_steps=1000\n","batch_size=256\n","display_step =50\n","\n","from tensorflow.keras.datasets import mnist\n","(x_train,y_train),(x_test,y_test)= mnist.load_data()\n","\n","#binaray classification 이어서 0,1만 뽑자\n","x_train,y_train=map(list,zip(*[(x,y) for x,y in zip(x_train,y_train)if y==0 or y==1]))\n","x_test,y_test= map(list,zip(*[(x,y) for x,y in zip(x_test,y_test)if y==0 or y==1]))\n","\n","#convert to float32\n","x_train,x_test =np.array(x_train,np.float32),np.array(x_test,np.float32)\n","y_train,y_test= np.array(y_train,np.float32),np.array(y_test,np.float32)\n","\n","#flatten images(n,784) to 1-d vector of 784 features(n,28,28)\n","x_train,x_test = x_train.reshape([-1,num_features]),x_test.reshape([-1,num_features])\n","\n","#normalize images value from (0,255) to (0,1)\n","x_train,x_test=x_train/255.,x_test/255.\n","\n","#tf.Data(batch)\n","train_data = tf.data.Dataset.from_tensor_slices((x_train,y_train))\n","train_data = train_data.repeat().shuffle(5000).batch(batch_size).prefetch(1)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"JAQL6uAzH502"},"source":["b=tf.Variable(tf.ones((num_features,))*0.000001,name=\"weight\")\n","b0=tf.Variable(0., name=\"bias\")"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"7mD6vxb5LOLI"},"source":["def logistic_regression(x,b,b0):\n","  return 1./(1. + tf.exp(-tf.reduce_sum(tf.multiply(x,b),axis=1)-b0))\n","\n","def loglikelihood(p,y_true):\n","  y_true = tf.cast(y_true,tf.float32)\n","  return y_true *tf.math.log(p)+(1-y_true)*tf.math.log(1-p)\n","def accuracy(y_pred,y_true):\n","  correct_prediction = tf.equal(tf.round(y_pred),tf.cast(y_true,tf.float32)) # 0또는 1 로 나옴결과.\n","  return tf.reduce_mean(tf.cast(correct_prediction,tf.float32)) # 평균하면 정확도가 됨.\n"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"XrPCffePMJKt","executionInfo":{"status":"ok","timestamp":1620883929708,"user_tz":-540,"elapsed":5364,"user":{"displayName":"송우석","photoUrl":"","userId":"17544301414917834266"}},"outputId":"e2fafab1-fc83-474f-b8e1-5bb700a6db01"},"source":["for step, (batch_x,batch_y) in enumerate(train_data.take(training_steps),1):\n","    #run the optimization to update w and b values.\n","    with tf.GradientTape() as g:\n","      g.watch([b,b0])\n","      p=logistic_regression(batch_x,b,b0)\n","      ll=loglikelihood(p,batch_y)\n","      ll_sum = tf.reduce_mean(ll)\n","    #compute gradients.\n","    grad_b,grad_b0 = g.gradient(ll_sum,[b,b0])\n","\n","    #update b ,b0 following gradients\n","    b=b+learning_rate *grad_b\n","    b0=b0+learning_rate *grad_b0\n","\n","    if step % display_step==0:\n","      p=logistic_regression(batch_x,b,b0)\n","      acc=accuracy(p,batch_y.numpy())\n","      print(\"step:%i, accuracy: %f\"%(step,acc))\n"],"execution_count":null,"outputs":[{"output_type":"stream","text":["step:50, accuracy: 0.996094\n","step:100, accuracy: 0.984375\n","step:150, accuracy: 0.996094\n","step:200, accuracy: 0.992188\n","step:250, accuracy: 0.996094\n","step:300, accuracy: 0.988281\n","step:350, accuracy: 0.984375\n","step:400, accuracy: 0.988281\n","step:450, accuracy: 0.996094\n","step:500, accuracy: 0.996094\n","step:550, accuracy: 0.984375\n","step:600, accuracy: 1.000000\n","step:650, accuracy: 0.996094\n","step:700, accuracy: 1.000000\n","step:750, accuracy: 0.996094\n","step:800, accuracy: 0.996094\n","step:850, accuracy: 0.988281\n","step:900, accuracy: 0.996094\n","step:950, accuracy: 0.984375\n","step:1000, accuracy: 0.984375\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"c_JyrBxGNeU2","executionInfo":{"status":"ok","timestamp":1620884259483,"user_tz":-540,"elapsed":626,"user":{"displayName":"송우석","photoUrl":"","userId":"17544301414917834266"}},"outputId":"efee5770-7101-4b84-af71-0437458ee369"},"source":["#test\n","p=logistic_regression(x_test,b,b0)\n","print(accuracy(p,y_test))"],"execution_count":null,"outputs":[{"output_type":"stream","text":["tf.Tensor(0.99763596, shape=(), dtype=float32)\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"j9bu2zdgPjZG"},"source":["##multivariate logistic regression도 tensorflow로 , mini batch, gradient tape써서 ㄱㄱ\n","\n","참고로 multivariate logistic regression은 single layer뉴럴 네트워크임"]},{"cell_type":"code","metadata":{"id":"f8Es7-PSOv_6","executionInfo":{"status":"ok","timestamp":1697697875712,"user_tz":-540,"elapsed":327,"user":{"displayName":"송우석","userId":"17544301414917834266"}}},"source":["num_classes =10\n","num_features=784\n","learning_rate = 0.0001\n","training_steps=1000\n","batch_size=256\n","display_step =50\n","\n","from tensorflow.keras.datasets import mnist\n","(x_train,y_train),(x_test,y_test)= mnist.load_data()\n","\n","#convert to float32\n","x_train,x_test =np.array(x_train,np.float32),np.array(x_test,np.float32)\n","y_train,y_test= np.array(y_train,np.float32),np.array(y_test,np.float32)\n","\n","#flatten images(n,784) to 1-d vector of 784 features(n,28,28)\n","x_train,x_test = x_train.reshape([-1,num_features]),x_test.reshape([-1,num_features])\n","\n","#normalize images value from (0,255) to (0,1)\n","x_train,x_test=x_train/255.,x_test/255.\n","\n","#tf.Data(batch)\n","train_data = tf.data.Dataset.from_tensor_slices((x_train,y_train))\n","train_data = train_data.repeat().shuffle(5000).batch(batch_size).prefetch(1)"],"execution_count":20,"outputs":[]},{"cell_type":"code","metadata":{"id":"WttARpCUX0qX","executionInfo":{"status":"ok","timestamp":1697697875712,"user_tz":-540,"elapsed":4,"user":{"displayName":"송우석","userId":"17544301414917834266"}}},"source":["b=tf.Variable(tf.ones((num_features,num_classes)),name=\"weight\") #(784,10)\n","b0=tf.Variable(tf.zeros([num_classes]), name=\"bias\")"],"execution_count":21,"outputs":[]},{"cell_type":"code","metadata":{"id":"VC-1ypqVX2OG","executionInfo":{"status":"ok","timestamp":1697697875712,"user_tz":-540,"elapsed":3,"user":{"displayName":"송우석","userId":"17544301414917834266"}}},"source":["def logistic_regression(x,b,b0):\n","  return tf.nn.softmax(tf.matmul(x,b)+b0)\n","def loglikelihood(y_pred,y_true):\n","\n","  # y_true = tf.one_hot(y_true,depth=num_classes)\n","  y_true = tf.one_hot(tf.cast(y_true, tf.int32),depth=num_classes)\n","\n","  y_pred=tf.clip_by_value(y_pred,1e-9,1.) #log0 error없애는거.\n","  #compute cross-entropy\n","  return tf.reduce_mean(tf.reduce_sum(y_true*tf.math.log(y_pred),axis=1))\n","def cross_entropy(y_pred, y_true):\n","    y_true = tf.cast(y_true, tf.int64)  # Ensure y_true is of integer data type\n","    y_true = tf.one_hot(y_true, depth=num_classes)\n","    y_pred = tf.clip_by_value(y_pred, 1e-9, 1.)\n","    return tf.reduce_mean(-tf.reduce_sum(y_true * tf.math.log(y_pred),axis=1))\n","\n","def accuracy(y_pred,y_true):\n","  correct_prediction = tf.equal(tf.argmax(y_pred,1),tf.cast(y_true,tf.int64)) # 0또는 1 로 나옴결과.\n","  return tf.reduce_mean(tf.cast(correct_prediction,tf.float32)) # 평균하면 정확도가 됨.\n"],"execution_count":22,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"VywlloEVX3__","executionInfo":{"status":"ok","timestamp":1697697942105,"user_tz":-540,"elapsed":10357,"user":{"displayName":"송우석","userId":"17544301414917834266"}},"outputId":"e61c9c08-1ebb-4b07-fc9c-28c65ecff9fd"},"source":["for step, (batch_x,batch_y) in enumerate(train_data.take(training_steps),1):\n","    #run the optimization to update w and b values.\n","    with tf.GradientTape() as g:\n","      g.watch([b,b0])\n","      pred=logistic_regression(batch_x,b,b0)\n","      loss=loglikelihood(pred,batch_y)\n","      #loss = cross_entropy(pred, batch_y)\n","    #compute gradients.\n","    #grad_b,grad_b0 = g.gradient(ll_sum,[b,b0])\n","    gradients =g.gradient(loss,[b,b0])\n","    #update b ,b0 following gradients\n","    b=b+learning_rate *gradients[0]\n","    b0=b0+learning_rate *gradients[1]\n","\n","    if step % display_step==0:\n","      pred=logistic_regression(batch_x,b,b0)\n","      acc=accuracy(pred,batch_y)\n","      print(\"step:%i, accuracy: %f\"%(step,acc))\n"],"execution_count":25,"outputs":[{"output_type":"stream","name":"stdout","text":["step:50, accuracy: 0.660156\n","step:100, accuracy: 0.730469\n","step:150, accuracy: 0.730469\n","step:200, accuracy: 0.718750\n","step:250, accuracy: 0.703125\n","step:300, accuracy: 0.730469\n","step:350, accuracy: 0.660156\n","step:400, accuracy: 0.679688\n","step:450, accuracy: 0.707031\n","step:500, accuracy: 0.722656\n","step:550, accuracy: 0.660156\n","step:600, accuracy: 0.710938\n","step:650, accuracy: 0.679688\n","step:700, accuracy: 0.667969\n","step:750, accuracy: 0.679688\n","step:800, accuracy: 0.695312\n","step:850, accuracy: 0.628906\n","step:900, accuracy: 0.656250\n","step:950, accuracy: 0.625000\n","step:1000, accuracy: 0.105469\n"]}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"tfLwTxJLX5b1","executionInfo":{"status":"ok","timestamp":1697697881661,"user_tz":-540,"elapsed":13,"user":{"displayName":"송우석","userId":"17544301414917834266"}},"outputId":"8b875d43-04ed-43c4-9b4e-c48eaf290bcf"},"source":["#test\n","pred=logistic_regression(x_test,b,b0)\n","print(accuracy(pred,y_test))"],"execution_count":24,"outputs":[{"output_type":"stream","name":"stdout","text":["tf.Tensor(0.7066, shape=(), dtype=float32)\n"]}]},{"cell_type":"code","source":[],"metadata":{"id":"zV08S9t5GOII","executionInfo":{"status":"ok","timestamp":1697697881663,"user_tz":-540,"elapsed":11,"user":{"displayName":"송우석","userId":"17544301414917834266"}}},"execution_count":24,"outputs":[]}]}